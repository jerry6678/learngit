一、安装和初始化
  1、自报家门
    【$ git config --global user.name "Your Name"】
    【$ git config --global user.email "email@example.com"】
  2、初始化一个Git仓库
    在要作为仓库的文件中，使用【git init】
二、时光穿梭
  3、添加文件到Git仓库，分两步：
    第一步，使用命令【git add file】，注意，可反复多次使用，添加多个文件；
    第二步，使用命令【git commit】，完成； 
  4、了解工作区状态和修改的地方
    要随时掌握工作区的状态，使用【git status】命令。
    如果git status告诉你有文件被修改过，用【git diff】可以查看修改内容。
  5、版本回退和恢复[针对整个版本库]
    HEAD指向的版本就是当前版本，HEAD^指前一个版本。
    Git允许我们在版本的历史之间穿梭，使用命令【git reset --hard commit_id】。
    穿梭前，用【git log】可以查看提交历史，以便确定要回退到哪个版本。
    要重返未来，用【git reflog】查看命令历史，以便确定要回到未来的哪个版本。
  6、工作区和暂存区
    前面讲了我们把文件往Git版本库里添加的时候，是分两步执行的：
      第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区；
      第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。
    我们创建Git版本库时，Git自动为我们创建了唯一一个master分支,git commit就是往master分支上提交更改。
    每次修改，如果不add到暂存区，那就不会加入到commit中;
  7、撤销修改
    场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令【git checkout -- file】
    场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步。
      第一步用命令【git reset HEAD file】就回到了场景1
      第二步按场景1操作。
    场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考（5、版本回退），不过前提是没有推送到远程库。
  8、命令【git rm】用于删除一个文件。
    如果一个文件已经被提交到版本库，那么你永远不用担心误删。
    但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容

三、远程仓库
  9、gitHub
四、分支创建
五、标签管理
六、使用GitHub
七、自定义Git
  

